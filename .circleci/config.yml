version: 2
workflows:
  version: 2
  build:
    jobs:
      - build-linux
      - build-windows
jobs:
  build-linux:
    docker:
      - image: debian:stretch

    steps:
      - checkout

      - run:
          name: Install tools
          command: apt update && apt install -y build-essential sqlite3
          
      - run:
          name: Build
          command: gcc -O2 -flto -o sqlite_sparse sqlite_sparse.c
          
      - run:
          name: Test
          command: |
            sqlite3 test.sqlite 'CREATE TABLE t (a INT, b TEXT)';
            sqlite3 test.sqlite 'INSERT INTO t (a, b) VALUES (1, "AAAA")';
            for i in {1..20};
            do
              sqlite3 test.sqlite 'INSERT INTO t (a, b) SELECT RANDOM(), b FROM t';
            done;
            sqlite3 test.sqlite 'DELETE FROM t ORDER BY RANDOM() LIMIT (SELECT COUNT(*) FROM t)*9/10';
            stat test.sqlite;
            BLOCKS_BEFORE=$(stat -c%b test.sqlite);
            ./sqlite_sparse test.sqlite;
            stat test.sqlite;
            BLOCKS_AFTER=$(stat -c%b test.sqlite);
            [ $BLOCKS_BEFORE -gt $BLOCKS_AFTER ] || exit 1; 
            sqlite3 test.sqlite 'PRAGMA check_integrity' || exit 2;
            
  build-windows:
    docker:
      - image: debian:stretch

    steps:
      - checkout

      - run:
          name: Install tools
          command: apt update && apt install -y mingw-w64
          
      - run:
          name: Build
          command: x86_64-w64-mingw32-gcc -O2 -flto -o sqlite_sparse sqlite_sparse.c
          
